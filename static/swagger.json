{
  "openapi": "3.0.0",
  "info": {
    "title": "Authentication API",
    "description": "API for user authentication, registration, and retrieving user details.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Allows users to register with a username, email, password, and role.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "testuser" },
                  "email": { "type": "string", "example": "testuser@example.com" },
                  "password": { "type": "string", "example": "securepassword" },
                  "role": { "type": "string", "example": "customer", "default": "customer" }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status_code": { "type": "integer" }
                  }
                },
                "example": {
                  "message": "Registration successful",
                  "status_code": 201
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email already registered",
                  "status_code": 400
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticate a user with email and password, returning a JWT access token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "testuser@example.com" },
                  "password": { "type": "string", "example": "securepassword" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status_code": { "type": "integer" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Login successful",
                  "status_code": 200,
                  "data": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "role": "customer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid credentials",
                  "status_code": 401
                }
              }
            }
          }
        }
      }
    },
    "/auth/user-details": {
      "get": {
        "summary": "Fetch user details",
        "description": "Retrieve details of the authenticated user. Requires a valid JWT token.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status_code": { "type": "integer" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "User details fetched successfully",
                  "status_code": 200,
                  "data": {
                    "id": "cust-1732117897.301645",
                    "name": "testuser",
                    "email": "testuser@example.com",
                    "role": "customer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Missing Authorization Header",
                  "status_code": 401
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "User not found",
                  "status_code": 404
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
